{"version":3,"sources":["src/api.ts","src/utils/drawing.ts","src/game.ts","src/index.ts","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["import { Cell } from \"./models/Cell\";\r\nimport { GridOptions } from \"./models/GridOptions\";\r\n\r\nexport const detectPatterns = (cell: Cell) => {\r\n\r\n}\r\n\r\nexport const detectBlock = (grid: Cell[], cell: Cell) => {\r\n    const cells = [\r\n        {\r\n            row: cell.row,\r\n            column: cell.column\r\n        },\r\n        {\r\n            row: cell.row,\r\n            column: cell.column - 1\r\n        },\r\n        {\r\n            row: cell.row - 1,\r\n            column: cell.column - 1\r\n        },\r\n        {\r\n            row: cell.row - 1,\r\n            column: cell.column\r\n        },\r\n    ]\r\n\r\n    if(grid.filter(cell => \r\n        cells.some(ce => cell.row === ce.row \r\n            && cell.column === ce.column) \r\n                && cell.active).length === 4) {\r\n        return true;\r\n    }\r\n    \r\n    return false;\r\n}\r\n\r\nexport const detectBlinker = (grid: Cell[], cell: Cell) => {\r\n    const cells1 = [\r\n        {\r\n            row: cell.row,\r\n            column: cell.column\r\n        },\r\n        {\r\n            row: cell.row - 1,\r\n            column: cell.column\r\n        },\r\n        {\r\n            row: cell.row - 2,\r\n            column: cell.column\r\n        }\r\n    ]\r\n\r\n    const cells2 = [\r\n        {\r\n            row: cell.row,\r\n            column: cell.column\r\n        },\r\n        {\r\n            row: cell.row,\r\n            column: cell.column - 1\r\n        },\r\n        {\r\n            row: cell.row,\r\n            column: cell.column - 2\r\n        }\r\n    ]\r\n\r\n    for(let cells of [cells1, cells2]) {\r\n        if(grid.filter(cell => \r\n            cells.some(ce => cell.row === ce.row \r\n                && cell.column === ce.column) \r\n                    && cell.active).length === 3) {\r\n            return true;\r\n        }\r\n    }\r\n    \r\n    return false;\r\n}\r\n\r\nexport const detectTub = (grid: Cell[], cell: Cell) => {\r\n    const cells = [\r\n        {\r\n            row: cell.row,\r\n            column: cell.column\r\n        },\r\n        {\r\n            row: cell.row - 2,\r\n            column: cell.column\r\n        },\r\n        {\r\n            row: cell.row - 1,\r\n            column: cell.column - 1\r\n        },\r\n        {\r\n            row: cell.row - 1,\r\n            column: cell.column + 1\r\n        }\r\n    ]\r\n\r\n    if(grid.filter(cell => \r\n        cells.some(ce => cell.row === ce.row \r\n            && cell.column === ce.column) \r\n                && cell.active).length === 4) {\r\n        return true;\r\n    }\r\n    \r\n    return false;\r\n}\r\n\r\nexport const detectPulsar = (grid: Cell[], cell: Cell) => {\r\n    return false;\r\n}\r\n\r\nexport const detectToad = (grid: Cell[], cell: Cell) => {\r\n    return false;\r\n}\r\n\r\nexport const detectLoaf = (grid: Cell[], cell: Cell) => {\r\n    const cells = [\r\n        {\r\n            row: cell.row,\r\n            column: cell.column\r\n        },\r\n        {\r\n            row: cell.row - 1,\r\n            column: cell.column - 1\r\n        },\r\n        {\r\n            row: cell.row - 2,\r\n            column: cell.column - 2\r\n        },\r\n        {\r\n            row: cell.row - 3,\r\n            column: cell.column\r\n        },\r\n        {\r\n            row: cell.row - 3,\r\n            column: cell.column -1\r\n        },\r\n        {\r\n            row: cell.row - 1,\r\n            column: cell.column + 1\r\n        },\r\n        {\r\n            row: cell.row - 2,\r\n            column: cell.column + 1\r\n        }\r\n    ]\r\n\r\n    if(grid.filter(cell => \r\n        cells.some(ce => cell.row === ce.row \r\n            && cell.column === ce.column) \r\n                && cell.active).length === 7) {\r\n        return true;\r\n    }\r\n    \r\n    return false;\r\n}\r\n\r\nexport const detectBoat = (grid: Cell[], cell: Cell) => {\r\n    const cells1 = [\r\n        {\r\n            row: cell.row,\r\n            column: cell.column\r\n        },\r\n        {\r\n            row: cell.row,\r\n            column: cell.column - 1\r\n        },\r\n        {\r\n            row: cell.row - 1,\r\n            column: cell.column\r\n        },\r\n        {\r\n            row: cell.row - 1,\r\n            column: cell.column - 2\r\n        },\r\n        {\r\n            row: cell.row - 2,\r\n            column: cell.column -1\r\n        }\r\n    ]\r\n\r\n    const cells2 = [\r\n        {\r\n            row: cell.row,\r\n            column: cell.column\r\n        },\r\n        {\r\n            row: cell.row,\r\n            column: cell.column - 1\r\n        },\r\n        {\r\n            row: cell.row - 1,\r\n            column: cell.column\r\n        },\r\n        {\r\n            row: cell.row - 1,\r\n            column: cell.column - 2\r\n        },\r\n        {\r\n            row: cell.row - 2,\r\n            column: cell.column -1\r\n        }\r\n    ]\r\n\r\n    for(const cells of [cells1, cells2]) {\r\n        if(grid.filter(cell => \r\n            cells.some(ce => cell.row === ce.row \r\n                && cell.column === ce.column) \r\n                    && cell.active).length === 5) {\r\n            return true;\r\n        }\r\n    }\r\n    \r\n    return false;\r\n}\r\n\r\nexport const detectGlider = (grid: Cell[], cell: Cell) => {\r\n    return false;\r\n}\r\n\r\n\r\nexport const getNeighborIndicies = (grid: Cell[], cell: Cell, rows: number, columns: number) => {\r\n\r\n    let prevRow = cell.row - 1;\r\n\r\n    if(prevRow < 0) {\r\n        prevRow = rows;\r\n    }\r\n\r\n    let nextRow = cell.row + 1;\r\n\r\n    if(nextRow > rows) {\r\n        nextRow = 0;\r\n    }\r\n\r\n    let prevColumn = cell.column - 1;\r\n\r\n    if(prevColumn < 0) {\r\n        prevColumn = columns;\r\n    }\r\n\r\n    let nextColumn = cell.column + 1;\r\n\r\n    if(nextColumn > columns) {\r\n        nextColumn = 0;\r\n    }\r\n\r\n    const potentialNeighbors = [\r\n        {\r\n            row: nextRow,\r\n            column: cell.column\r\n        },\r\n        {\r\n            row: prevRow,\r\n            column: cell.column\r\n        },\r\n        {\r\n            row: cell.row,\r\n            column: prevColumn,\r\n        },\r\n        {\r\n            row: cell.row,\r\n            column: nextColumn,\r\n        },\r\n        {\r\n            row: nextRow,\r\n            column: nextColumn,\r\n        },\r\n        {\r\n            row: prevRow,\r\n            column: prevColumn,\r\n        },\r\n        {\r\n            row: nextRow,\r\n            column: prevColumn,\r\n        },\r\n        {\r\n            row: prevRow,\r\n            column: nextColumn,\r\n        },\r\n    ]\r\n\r\n    return grid.filter(pr => potentialNeighbors.some(nb => nb.row === pr.row && nb.column === pr.column)).map(pr => pr.id)\r\n}\r\n\r\nexport const drawBoard = (context: CanvasRenderingContext2D, width: number, height: number) => {\r\n    let size = 15;\r\n    let xOffset = 100;\r\n    let yOffset = 100;\r\n    let rows = 50;\r\n    let columns = 50;\r\n    let borderWidth = 1;\r\n    const newSize = borderWidth + size;\r\n\r\n    //const width = newSize * rows;\r\n    //const height = newSize * rows;\r\n\r\n    context.fillStyle = \"#000\";\r\n    context.fillRect(0, 0, width, height);\r\n}\r\n\r\nexport const initalizeGrid = (options: GridOptions) => {\r\n    const { height, width, columns, rows, xOffset, yOffset } = options;\r\n\r\n    let sizeX = width / columns;\r\n    let sizeY = height / rows;\r\n    let borderWidth = 1;\r\n    const newSizeX = borderWidth + sizeX;\r\n    const newSizeY = borderWidth + sizeY;\r\n\r\n    let grid: Cell[] = Array(rows * columns).fill(0).map((pr, index) => {\r\n        const row = Math.floor(index / rows);\r\n        const column = index % columns;\r\n\r\n        return {\r\n            id: index,\r\n            row,\r\n            column,\r\n            x: xOffset + newSizeX * row,\r\n            y: yOffset + newSizeY * column,\r\n            sizeX,\r\n            sizeY,\r\n            active: Boolean(Math.floor(Math.random() * 2)),\r\n            neighborIds: []\r\n        }\r\n    })\r\n\r\n\r\n\r\n    for(let cell of grid) {\r\n        cell.neighborIds = getNeighborIndicies(grid, cell, rows, columns);\r\n    }\r\n\r\n    return grid;\r\n}\r\n\r\nexport const getNewCellState = (grid: Cell[], cell: Cell) => {\r\n    const aliveNeighbors = cell.neighborIds.filter(neighborId => grid[neighborId].active).length;\r\n        \r\n    if(!cell.active && aliveNeighbors === 3) {\r\n        return true;\r\n    }\r\n    else if(cell.active && (aliveNeighbors < 2 || aliveNeighbors > 3)) {\r\n        return false;\r\n    }\r\n\r\n    return cell.active;\r\n}\r\n\r\nexport const computeNextState = (grid: Cell[]) => new Promise<any>((resolve, reject) => {\r\n    \r\n    const newGrid = [...grid.map(pr => ({...pr}))];\r\n    const length = newGrid.length;\r\n    const lifes: {\r\n        [index: string]: number\r\n    } = {\r\n\r\n    }\r\n    let aliveCells = 0;\r\n\r\n    for(let i = 0; i < length ; i++) {\r\n        const cell = grid[i];\r\n        const newCell = newGrid[i];\r\n\r\n        const active = getNewCellState(grid, cell);\r\n        newCell.active = active;\r\n\r\n        aliveCells = aliveCells + Number(newCell.active);\r\n\r\n        const patterns = detectPatterns(cell);\r\n        // if(detectBlock(grid, newCell)) {\r\n        //     lifes[\"block\"] = (lifes[\"block\"] || 0) + 1;\r\n        // }\r\n        // if(detectBlinker(grid, newCell)) {\r\n        //     lifes[\"blinker\"] = (lifes[\"blinker\"] || 0) + 1;\r\n        // }\r\n        // if(detectTub(grid, newCell)) {\r\n        //     lifes[\"tub\"] = (lifes[\"tub\"] || 0) + 1;\r\n        // }\r\n        // if(detectLoaf(grid, newCell)) {\r\n        //     lifes[\"loaf\"] = (lifes[\"loaf\"] || 0) + 1;\r\n        // }\r\n        // if(detectBoat(grid, newCell)) {\r\n        //     lifes[\"boat\"] = (lifes[\"boat\"] || 0) + 1;\r\n        // }\r\n        // if(detectGlider(grid, newCell)) {\r\n        //     lifes[\"glider\"] = (lifes[\"glider\"] || 0) + 1;\r\n        // }\r\n    }\r\n\r\n    resolve({\r\n        aliveCells,\r\n        grid: newGrid,\r\n        lifes: Object.entries(lifes).map((pr, index) => [index, ...pr] as [number, string, number])\r\n    });\r\n})","import { Cell } from \"../models/Cell\";\r\nimport { StyleOptions } from \"../models/StyleOptions\";\r\nimport { RegisteredAction } from \"../models/RegisteredAction\";\r\n\r\nconst baseStyle: StyleOptions = {\r\n    fontSize: \"30px\",\r\n    fontFamily: \"Arial\",\r\n    color: \"#FFF\",\r\n}\r\n\r\nexport const setText = (context: CanvasRenderingContext2D, options: StyleOptions) => {\r\n    const combined =  {\r\n        ...baseStyle,\r\n        ...options\r\n    }\r\n\r\n    if(!combined.color || !combined.text || !combined.x || !combined.y) {\r\n        throw new Error(\"Missing params: x, y, color, text\");\r\n    }\r\n\r\n    context.fillStyle = combined.color;\r\n    context.font = `${combined.fontSize} ${combined.fontFamily}`;\r\n    // ctx.fillText(\"width:\" + ctx.measureText(txt).width, 10, 50)\r\n    context.fillText(combined.text, combined.x, combined.y);\r\n}\r\n\r\nexport const drawCell = (context: CanvasRenderingContext2D, cell: Cell) => {\r\n    const { x, y, sizeX, sizeY, active } = cell;\r\n\r\n    let color = \"#FFFFFF99\";\r\n\r\n    if(!active) {\r\n        color = \"#000\";\r\n    }\r\n\r\n    context.fillStyle = color;\r\n    context.fillRect(x, y, sizeX, sizeY);\r\n}\r\n\r\nexport const registered: RegisteredAction[] = []\r\n\r\nexport const setButton = (id: number, context: CanvasRenderingContext2D, options: StyleOptions, onClickCallback: () => void) => {\r\n    const combined =  {\r\n        ...baseStyle,\r\n        ...options\r\n    }\r\n\r\n    if(!combined.color || !combined.text || !combined.x || !combined.y) {\r\n        throw new Error(\"Missing params: x, y, color, text\");\r\n    }\r\n\r\n    if(!registered.some(pr => pr.id === id)) {\r\n        registered.push({\r\n            id: id,\r\n            startX: combined.x - 10,\r\n            startY: combined.y - 35,\r\n            endX: combined.x + 100,\r\n            endY: combined.y + 50,\r\n            callback: onClickCallback\r\n        })\r\n    }\r\n\r\n    context.fillStyle = combined.color;\r\n    context.font = `${combined.fontSize} ${combined.fontFamily}`;\r\n    context.fillText(combined.text, combined.x, combined.y);\r\n    context.strokeStyle = \"#FFF\";\r\n    context.strokeRect(combined.x - 10, combined.y - 35, 100, 50);\r\n}","import { Cell } from \"./models/Cell\";\r\nimport { initalizeGrid, drawBoard, detectBlock, detectBlinker, detectLoaf, detectBoat, detectGlider, detectTub, detectPatterns, computeNextState } from \"./api\";\r\nimport { StyleOptions } from \"./models/StyleOptions\";\r\nimport { RegisteredAction } from \"./models/RegisteredAction\";\r\nimport { setText, drawCell, registered, setButton } from \"./utils/drawing\";\r\n\r\nexport default () => {\r\n    const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\r\n    const context = canvas.getContext(\"2d\");\r\n\r\n    let width = window.innerWidth;\r\n    let height = window.innerHeight;\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    let gridOptions = {\r\n        xOffset: 0,\r\n        yOffset: 100,\r\n        width: width,\r\n        height: height - 200,\r\n        rows: 100,\r\n        columns: 90\r\n    }\r\n\r\n    canvas.addEventListener(\"mousemove\", (event) => {\r\n        const { clientX, clientY } = event;\r\n        \r\n        for(const { startX, endX, startY, endY } of registered) {\r\n            if(clientX > startX && clientX < endX && clientY > startY && clientY < endY) {\r\n                canvas.style.cursor = \"pointer\";\r\n            }\r\n            else {\r\n                canvas.style.cursor = \"initial\";\r\n            }\r\n        }\r\n    })\r\n\r\n    canvas.addEventListener(\"click\", (event) => {\r\n        const { clientX, clientY } = event;\r\n        \r\n        for(const { startX, endX, startY, endY, callback } of registered) {\r\n            if(clientX > startX && clientX < endX && clientY > startY && clientY < endY) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n    })\r\n\r\n    window.addEventListener(\"resize\", () => {\r\n        width = window.innerWidth;\r\n        height = window.innerHeight;\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        gridOptions.width = width;\r\n        gridOptions.height = height - 200;\r\n        resetTriggered = true;\r\n        grid = initalizeGrid(gridOptions);\r\n    })\r\n\r\n    if(!context) {\r\n        return\r\n    }\r\n\r\n    let grid = initalizeGrid(gridOptions);\r\n\r\n    const dpr = window.devicePixelRatio || 1;\r\n    const bsr = context.webkitBackingStorePixelRatio ||\r\n        context.mozBackingStorePixelRatio ||\r\n        context.msBackingStorePixelRatio ||\r\n        context.oBackingStorePixelRatio ||\r\n          context.backingStorePixelRatio || 1;\r\n\r\n    const state = {\r\n        ready: false\r\n    }\r\n\r\n    let newGrid: any = null;\r\n    let lastState = {\r\n        grid,\r\n        lifes: [],\r\n        aliveCells: 0\r\n    };\r\n    let resetTriggered = false;\r\n    let canUpdate = false;\r\n\r\n    const getLatestState = () => {\r\n        return lastState\r\n    }\r\n\r\n    const tryReplaceState = (state: any) => {\r\n        if(canUpdate) {\r\n            if(!resetTriggered) {\r\n                lastState = state;\r\n            }\r\n            resetTriggered = false;\r\n            setTimeout(computeNextStateLoop, 0);\r\n            return;\r\n        }\r\n        setTimeout(tryReplaceState, 5);    \r\n    }\r\n\r\n    const computeNextStateLoop = () => {\r\n        const { grid } = lastState;\r\n        computeNextState(grid)\r\n            .then((state: any) => {\r\n                setTimeout(() => tryReplaceState(state), 0);\r\n            })\r\n    }\r\n\r\n    setTimeout(computeNextStateLoop, 0);\r\n\r\n    const currentYear  = new Date().getFullYear();\r\n\r\n    const onResetClick = () => {\r\n        resetTriggered = true;\r\n        grid = initalizeGrid(gridOptions);\r\n        lastState = {\r\n            grid,\r\n            lifes: [],\r\n            aliveCells: 0\r\n        };\r\n    }\r\n\r\n    const loop = () => {\r\n        canUpdate = false;\r\n        drawBoard(context, canvas.width, canvas.height);\r\n\r\n        const { aliveCells, lifes, grid } = getLatestState();\r\n\r\n        for(let cell of grid) {\r\n            drawCell(context, cell);\r\n        }\r\n\r\n        setText(context, {\r\n            text: `Alive cells ${aliveCells}`,\r\n            x: width / 50,\r\n            y: height / 10\r\n        })\r\n\r\n        setText(context, {\r\n            text: \"Game of Life\",\r\n            x: width / 2,\r\n            y: height / 10,\r\n            fontSize: \"50px\"\r\n        });\r\n\r\n        // setText(context, {\r\n        //     text: \"Detected lifes\",\r\n        //     x: 1000,\r\n        //     y: 50\r\n        // });\r\n\r\n        setButton(1, context, {\r\n            text: \"Reset\",\r\n            x: width * 2 / 3,\r\n            y: height * 9 / 10,\r\n        }, onResetClick);\r\n\r\n        // for(let [index, name, count] of lifes) {\r\n        //     setText(context, {\r\n        //         text: `${name} ${count}`,\r\n        //         x: 1000,\r\n        //         y: index * 50 + 100\r\n        //     });\r\n        // }\r\n\r\n        setText(context, {\r\n            text: `Józef Podlecki ${currentYear}`,\r\n            x: width / 2,\r\n            y: height * 9 / 10\r\n        });\r\n\r\n        canUpdate = true;\r\n\r\n        setTimeout(() => {\r\n            requestAnimationFrame(loop);\r\n        }, 30)\r\n    }\r\n\r\n    requestAnimationFrame(loop);\r\n}","import init from './game';\r\n\r\nwindow.addEventListener(\"load\", init);","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}